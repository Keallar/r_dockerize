---
:en:
  :r_dockerize:
    :errors:
      :messages:
        :command_not_found: 'Non-existent command: %{command}. Available commands:
          %{av_commands}'
        :js_not_found: 'Non available js option: %{option}. Available options: %{av_options}'
        :db_not_found: 'Non available db option: %{option}. Available options: %{av_options}'
        :subservice_not_found: 'Non available subservices option: %{option}. Available
          options: %{av_options}'
    :docker:
      :standard: |
        FROM ruby:%{ruby_version}

        RUN apt-get update -qq && apt-get install -y postgresql-client

        RUN curl -sL https://deb.nodesource.com/setup_19.x | bash -\
          && apt-get update -qq && apt-get install -qq --no-install-recommends \
            nodejs \
          && apt-get upgrade -qq \
          && apt-get clean \
          && rm -rf /var/lib/apt/lists/*\
          && npm install -g yarn@1

        RUN yarn add esbuild
        RUN yarn add sass

        ENV APP_APTH=/usr/src
        WORKDIR $APP_APTH

        ADD Gemfile $APP_APTH/Gemfile
        ADD Gemfile.lock $APP_APTH/Gemfile.lock

        RUN yarn install

        RUN bundle install
      :user_template: kek
      :template: FROM ruby:%{ruby_version}
      :db:
        :sqlite: ''
      :js_pm:
        :yarn: ''
        :npm: ''
    :dco:
      :template: |-
        version: '3.5'

        services:
          app:
            build: .
            command: sh -c "rm -f tmp/pids/server.pid && bin/dev"
            tty: true
            volumes:
              - .:/usr/src
            stdin_open: true
            ports:
              - "3000:3000"

          %{js_option}%{db_option}%{subservices_option}

        %{volumes_option}
      :user_template: ''
      :js:
        :importmap: importmap
        :esbuild: esbuild
        :webpack: webpack
      :db:
        :postgresql: |-
          db:
              image: postgres
              environment:
                - POSTGRES_USER=user
                - POSTGRES_PASSWORD=pass
              volumes:
                - postgresql:/var/lib/postgresql/data
              ports:
                - "5432:5432"
        :mysql: |-
          db:
                  image: mysql:5.7
                  restart: always
                  environment:
                     - MYSQL_ROOT_PASSWORD: password
                     - MYSQL_DATABASE: app
                     - MYSQL_USER: user
                     - MYSQL_PASSWORD: password
                  ports:
                      - "3307:3306"
        :mongodb: |-
          mongo:
              image: "mongo:4.2.8"
              environment:
                MONGO_INITDB_ROOT_USERNAME: root
                MONGO_INITDB_ROOT_PASSWORD: example
              ports:
                - "27017:27017"
              volumes:
                - "mongodb:/var/lib/mongodb/data"
        :sqlite: |-
          db:
              image: nouchka/sqlite3:latest
              volumes:
                - db:/root/db
              stdin_open: true
              tty: true
      :subservices:
        :redis: |+
          redis:
              image: redis:alpine
              expose:
                - 6379
              volumes:
                -redis:/data

        :rabbitmq: |+
          rabbitmq:
              platform: linux/x86_64
              image: rabbitmq:management-alpine
              ports:
                - 15672:15672
              expose:
                - 5672

        :sidekiq: |-
          sidekiq:
              <<: *app
              build:
                command: bundle exec sidekiq
